import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–º –∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
interface Topic {
  id: number;
  title: string;
  isOpen: boolean;
  isCompleted: boolean;
  description: string;
}

interface Subject {
  id: number;
  name: string;
  icon: string;
  description: string;
  color: string;
  topics: Topic[];
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —Ç–µ–º
const subjects: Subject[] = [
  {
    id: 1,
    name: '–ê–ª–≥–µ–±—Ä–∞',
    icon: '‚ûó',
    description: '–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–π —Å–≤–æ–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏',
    color: 'from-blue-500 to-indigo-600',
    topics: [
      {
        id: 1,
        title: '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è',
        isOpen: true,
        isCompleted: false,
        description: '–û—Å–Ω–æ–≤—ã —Ä–µ—à–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç–∞'
      },
      {
        id: 2,
        title: '–§—É–Ω–∫—Ü–∏–∏ –∏ –∏—Ö –≥—Ä–∞—Ñ–∏–∫–∏',
        isOpen: false,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π, –∏—Ö —Ç–∏–ø–æ–≤ –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤'
      },
      {
        id: 3,
        title: '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ (–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∞—è –∏ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è)',
        isOpen: false,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–π, —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏'
      }
    ]
  },
  {
    id: 2,
    name: '–ì–µ–æ–º–µ—Ç—Ä–∏—è',
    icon: 'üìê',
    description: '–ò–∑—É—á–∞–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞',
    color: 'from-green-500 to-emerald-600',
    topics: [
      {
        id: 1,
        title: '–ë–∞–∑–æ–≤—ã–µ —Ñ–∏–≥—É—Ä—ã –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞',
        isOpen: true,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ–∏–≥—É—Ä'
      },
      {
        id: 2,
        title: '–ü–ª–æ—â–∞–¥–∏ –∏ –æ–±—ä–µ–º—ã —Ñ–∏–≥—É—Ä',
        isOpen: false,
        isCompleted: false,
        description: '–§–æ—Ä–º—É–ª—ã –ø–ª–æ—â–∞–¥–µ–π –∏ –æ–±—ä–µ–º–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–∏–≥—É—Ä'
      },
      {
        id: 3,
        title: '–í–µ–∫—Ç–æ—Ä—ã –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ',
        isOpen: false,
        isCompleted: false,
        description: '–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ'
      }
    ]
  },
  {
    id: 3,
    name: '–ë–∏–æ–ª–æ–≥–∏—è',
    icon: 'üåø',
    description: '–£–∑–Ω–∞–π –±–æ–ª—å—à–µ –æ –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–∞—Ö',
    color: 'from-yellow-500 to-amber-600',
    topics: [
      {
        id: 1,
        title: '–û—Å–Ω–æ–≤—ã –∫–ª–µ—Ç–æ—á–Ω–æ–π —Ç–µ–æ—Ä–∏–∏ –∏ —Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏',
        isOpen: true,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ –∫–ª–µ—Ç–æ—á–Ω–æ–π —Ç–µ–æ—Ä–∏–∏, –æ—Ä–≥–∞–Ω–æ–∏–¥–æ–≤ –∫–ª–µ—Ç–∫–∏ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–π'
      },
      {
        id: 2,
        title: '–ì–µ–Ω–µ—Ç–∏–∫–∞. –ó–∞–∫–æ–Ω—ã –ú–µ–Ω–¥–µ–ª—è',
        isOpen: false,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤ –≥–µ–Ω–µ—Ç–∏–∫–∏ –∏ –∑–∞–∫–æ–Ω–æ–≤ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ì—Ä–µ–≥–æ—Ä–æ–º –ú–µ–Ω–¥–µ–ª–µ–º'
      },
      {
        id: 3,
        title: '–≠–≤–æ–ª—é—Ü–∏—è –∏ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ –∂–∏–∑–Ω–∏',
        isOpen: false,
        isCompleted: false,
        description: '–ò–∑—É—á–µ–Ω–∏–µ —Ç–µ–æ—Ä–∏–π –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –∂–∏–∑–Ω–∏ –Ω–∞ –ó–µ–º–ª–µ –∏ –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ —ç–≤–æ–ª—é—Ü–∏–∏'
      }
    ]
  },
  {
    id: 4,
    name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
    icon: 'üíª',
    description: '–ò–∑—É—á–∏ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏',
    color: 'from-red-500 to-rose-600',
    topics: [
      {
        id: 1,
        title: '–û—Å–Ω–æ–≤—ã –∞–ª–≥–æ—Ä–∏—Ç–º–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
        isOpen: true,
        isCompleted: false,
        description: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –±–∞–∑–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è'
      },
      {
        id: 2,
        title: '–Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. Python',
        isOpen: false,
        isCompleted: false,
        description: '–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å —è–∑—ã–∫–æ–º Python ‚Äî —Å–∞–º—ã–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–º —è–∑—ã–∫–æ–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞'
      },
      {
        id: 3,
        title: '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç',
        isOpen: false,
        isCompleted: false,
        description: '–ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –æ —Ç–æ–º, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω—ã —Å–µ—Ç–∏ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–Ω—Ç–µ—Ä–Ω–µ—Ç'
      }
    ]
  }
];

const Learning = () => {
  const [selectedSubject, setSelectedSubject] = useState<Subject | null>(null);
  const navigate = useNavigate();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
  const calculateProgress = (topics: Topic[]): number => {
    if (topics.length === 0) return 0;
    const completedTopics = topics.filter(topic => topic.isCompleted).length;
    return Math.round((completedTopics / topics.length) * 100);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
  const renderSubjectsGrid = () => (
    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
      {subjects.map((subject) => (
        <motion.div
          key={subject.id}
          whileHover={{ y: -5 }}
          transition={{ duration: 0.2 }}
          className="bg-white dark:bg-[#1e1e1e] rounded-2xl shadow-sm overflow-hidden cursor-pointer"
          onClick={() => setSelectedSubject(subject)}
        >
          <div className={`h-2 bg-gradient-to-r ${subject.color}`}></div>
          <div className="p-6">
            <div className="flex items-start mb-4">
              <div className="text-4xl mr-4">{subject.icon}</div>
              <div>
                <h3 className="text-xl font-semibold text-gray-900 dark:text-white">{subject.name}</h3>
                <p className="text-sm text-gray-600 dark:text-gray-400">{subject.description}</p>
              </div>
            </div>
            
            <div className="mt-4">
              <div className="flex justify-between items-center mb-1 text-sm">
                <span>–ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                <span className="font-medium">{calculateProgress(subject.topics)}%</span>
              </div>
              <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
                <div
                  className={`h-2.5 rounded-full bg-gradient-to-r ${subject.color}`}
                  style={{ width: `${calculateProgress(subject.topics)}%` }}
                ></div>
              </div>
            </div>
            
            <button 
              className="mt-4 w-full py-2 px-4 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors text-sm font-medium"
            >
              –•–æ—á—É —É–ª—É—á—à–∏—Ç—å –∑–Ω–∞–Ω–∏—è!
            </button>
          </div>
        </motion.div>
      ))}
    </div>
  );

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ç–µ–º–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
  const renderTopicsList = () => {
    if (!selectedSubject) return null;

    return (
      <>
        <div className="mb-6">
          <button
            onClick={() => setSelectedSubject(null)}
            className="flex items-center text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary"
          >
            <svg className="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º
          </button>
        </div>

        <div className={`bg-gradient-to-r ${selectedSubject.color} text-white rounded-2xl p-8 mb-6`}>
          <div className="flex items-center">
            <span className="text-5xl mr-4">{selectedSubject.icon}</span>
            <div>
              <h2 className="text-2xl font-bold">{selectedSubject.name}</h2>
              <p className="text-white/80">{selectedSubject.description}</p>
            </div>
          </div>
        </div>

        <h3 className="text-xl font-semibold mb-4">–¢–µ–º—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</h3>
        
        <div className="space-y-4">
          {selectedSubject.topics.map((topic, index) => (
            <motion.div
              key={topic.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
              className={`bg-white dark:bg-[#1e1e1e] rounded-xl p-5 border-l-4 ${
                topic.isCompleted 
                  ? 'border-green-500' 
                  : topic.isOpen 
                    ? `border-${selectedSubject.color.split(' ')[1]}` 
                    : 'border-gray-300 dark:border-gray-700'
              }`}
            >
              <div className="flex justify-between items-center">
                <h4 className="font-medium text-lg">
                  {index + 1}. {topic.title}
                </h4>
                {topic.isCompleted ? (
                  <span className="bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-green-900/30 dark:text-green-400">
                    –ó–∞–≤–µ—Ä—à–µ–Ω–æ ‚úì
                  </span>
                ) : topic.isOpen ? (
                  <button 
                    className={`px-3 py-1 bg-gradient-to-r ${selectedSubject.color} text-white text-sm rounded-full`}
                    onClick={() => navigate(`/learning/${selectedSubject.id}/topic/${topic.id}`)}
                  >
                    –ù–∞—á–∞—Ç—å
                  </button>
                ) : (
                  <span className="bg-gray-100 text-gray-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">
                    üîí –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ
                  </span>
                )}
              </div>
              <p className="text-gray-600 dark:text-gray-400 text-sm mt-2">
                {topic.description}
              </p>
            </motion.div>
          ))}
        </div>
      </>
    );
  };

  return (
    <div className="min-h-screen flex flex-col bg-gray-50 dark:bg-[#121212]">
      <Navbar />

      <main className="flex-grow py-6 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="mb-8">
            <h1 className="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white">
              –û–±—É—á–µ–Ω–∏–µ
            </h1>
            <p className="mt-2 text-gray-600 dark:text-gray-400">
              –ò–∑—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ–º—ã, —Ä–µ—à–∞–π—Ç–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏
            </p>
          </div>

          {selectedSubject ? renderTopicsList() : renderSubjectsGrid()}
        </div>
      </main>

      <Footer />
    </div>
  );
};

export default Learning; 